# Test the hover-text-with-description workflow in headless mode
name: Test v6 Spawner

on:
  workflow_dispatch:
  pull_request:
  push:

jobs:
  gather-test-files:
    name: Gather Test Files
    runs-on: ubuntu-latest
    outputs:
      test_files: ${{ steps.test_list.outputs.files }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Find all test files
        id: test_list
        run: |
          FILES=$(ls ./testdriver/*.yaml)
          FILENAMES=$(basename -a $FILES)
          FILES_JSON=$(echo "$FILENAMES" | jq -R -s -c 'split("\n")[:-1]')
          echo "files=$FILES_JSON" >> $GITHUB_OUTPUT
  test-workflow:
    needs:
      - gather-test-files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm install --no-optional

      - name: Run tests sequentially
        continue-on-error: true
        run: |
          TEST_FILES="${{ needs.gather-test-files.outputs.test_files }}"
          echo "Test files: $TEST_FILES"

          # Initialize counters and report arrays
          PASSED_TESTS=()
          FAILED_TESTS=()
          TOTAL_TESTS=0

          echo "üöÄ Starting test execution..."
          echo "================================"

          # Parse JSON array and run each test
          echo "$TEST_FILES" | jq -r '.[]' | while read -r test_file; do
            TOTAL_TESTS=$((TOTAL_TESTS + 1))
            echo ""
            echo "üìã Test $TOTAL_TESTS: $test_file"
            echo "‚è±Ô∏è  Starting at $(date '+%H:%M:%S')"
            echo "---"
            
            # Run the test and capture exit code
            if node index.js run "testdriver/$test_file"; then
              echo "‚úÖ PASSED: $test_file"
              PASSED_TESTS+=("$test_file")
            else
              echo "‚ùå FAILED: $test_file"
              FAILED_TESTS+=("$test_file")
            fi
            
            echo "‚è±Ô∏è  Completed at $(date '+%H:%M:%S')"
            echo "---"
          done

          # Generate final report
          echo ""
          echo "üìä TEST EXECUTION REPORT"
          echo "================================"
          echo "Total tests run: $TOTAL_TESTS"
          echo "Passed: ${#PASSED_TESTS[@]}"
          echo "Failed: ${#FAILED_TESTS[@]}"
          echo ""

          if [ ${#PASSED_TESTS[@]} -gt 0 ]; then
            echo "‚úÖ PASSED TESTS:"
            printf '   %s\n' "${PASSED_TESTS[@]}"
            echo ""
          fi

          if [ ${#FAILED_TESTS[@]} -gt 0 ]; then
            echo "‚ùå FAILED TESTS:"
            printf '   %s\n' "${FAILED_TESTS[@]}"
            echo ""
          fi

          echo "üèÅ Test execution completed at $(date)"
          echo "================================"
        env:
          FORCE_COLOR: 3
          TD_API_KEY: ${{ secrets.TESTDRIVER_API_KEY }}
          TD_WEBSITE: https://testdriver-sandbox.vercel.app
