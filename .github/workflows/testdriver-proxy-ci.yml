name: TestDriver Proxy CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'testdriver-proxy/**'
      - '.github/workflows/testdriver-proxy-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'testdriver-proxy/**'
      - '.github/workflows/testdriver-proxy-ci.yml'
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'
  DOCKER_IMAGE: testdriver-proxy

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: testdriver-proxy/package-lock.json
      
      - name: Install dependencies
        working-directory: testdriver-proxy
        run: npm ci
      
      - name: Run linter
        working-directory: testdriver-proxy
        run: npm run lint || echo "No linter configured"
        continue-on-error: true
      
      - name: Start server in background
        working-directory: testdriver-proxy
        env:
          API_PROVIDER: zai
          API_KEY: ${{ secrets.ZAI_API_KEY || 'test-key-for-ci' }}
          API_BASE_URL: https://api.z.ai/api/anthropic
          MODEL: glm-4.5v
          PORT: 8080
        run: |
          node server.js > server.log 2>&1 &
          echo $! > server.pid
          sleep 5
      
      - name: Health check
        run: |
          curl -f http://localhost:8080/health || (cat testdriver-proxy/server.log && exit 1)
      
      - name: Run test suite
        working-directory: testdriver-proxy
        run: ./run_tests.sh || true
      
      - name: Stop server
        if: always()
        working-directory: testdriver-proxy
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
          fi
      
      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: server-logs
          path: testdriver-proxy/server.log

  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Docker image
        working-directory: testdriver-proxy
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }}:latest .
      
      - name: Test Docker image
        run: |
          docker run -d --name test-proxy \
            -e API_PROVIDER=zai \
            -e API_KEY=test-key \
            -e API_BASE_URL=https://api.z.ai/api/anthropic \
            -e MODEL=glm-4.5v \
            -p 8080:8080 \
            ${{ env.DOCKER_IMAGE }}:latest
          
          sleep 10
          
          curl -f http://localhost:8080/health || (docker logs test-proxy && exit 1)
          
          docker stop test-proxy
          docker rm test-proxy
      
      - name: Login to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        working-directory: testdriver-proxy
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:latest .
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ github.sha }}

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: 'testdriver-proxy'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [test, docker-build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    environment:
      name: staging
      url: https://staging-testdriver-proxy.example.com
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Deploy to staging
        run: |
          echo "Deploy to staging environment"
          # Add your staging deployment commands here
          # Example: Railway, Render, Fly.io, etc.

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [test, docker-build, security-scan]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: production
      url: https://testdriver-proxy.example.com
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Deploy to production
        run: |
          echo "Deploy to production environment"
          # Add your production deployment commands here
          # Example: Railway, Render, Fly.io, etc.

